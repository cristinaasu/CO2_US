---
title: "How do spatial patterns of CO2 concentrations in the U.S. change between 2000 and 2024, and what role do urbanization and population density play?"
author: Cristina Su Lam
thanks: "Code and data are available at: https://github.com/cristinaasu/CO2_US"
date: today
date-format: long
toc: true
fig_caption: yes
format: pdf
number-sections: true
bibliography: references.bib
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
library(tidyverse)
library(tigris)
library(sf)
library(spdep)
library(gstat)
library(automap)
library(viridis) 
library(ggspatial)
library(rnaturalearth)
library(rnaturalearthdata)
library(spdep)
library(spatialreg)
library(caret)
library(geoR)
library(fields)
```

```{r, warning=FALSE, echo=FALSE, message=FALSE}
# Load the dataset
co2daily_2024 <- read_csv("/Users/cristinasulam/Desktop/sta465/Research Project/daily_42101_2024.csv", show_col_types = FALSE)

co2daily_2000 <- read_csv("/Users/cristinasulam/Desktop/sta465/Research Project/daily_42101_2000.csv", show_col_types = FALSE)

pop_den_2024 <- read_csv("/Users/cristinasulam/Desktop/sta465/Research Project/pop_density_2024.csv", show_col_types = FALSE)

urban_2020 <- read_csv("/Users/cristinasulam/Desktop/sta465/Research Project/urban_rural.csv", show_col_types = FALSE) %>%
  rename(State = `Label (Grouping)`) %>%
  mutate(State = str_trim(State))

# Download US State Boundaries
us_states <- states(cb = TRUE)
```

```{r, warning=FALSE, echo=FALSE, message=FALSE}
# Data cleaning for January - Filter, select columns, and drop NAs
co2daily_2024_state_avg <- co2daily_2024 %>%
  filter(str_starts(`Date Local`, "2024-01"), 
         `Sample Duration` == "8-HR RUN AVG END HOUR", 
         `Parameter Name` == "Carbon monoxide", 
         `Pollutant Standard` == "CO 8-hour 1971") %>%
  drop_na() %>%
  group_by(`State Name`, `Date Local`) %>%  
  summarize(
    `Arithmetic Mean` = mean(`Arithmetic Mean`, na.rm = TRUE),
    .groups = "drop"
  ) 
  
co2daily_2024_state_avg <- co2daily_2024_state_avg %>%
  left_join(pop_den_2024, by = c("State Name" = "state"))

co2daily_2024_state_avg <- co2daily_2024_state_avg %>%
  left_join(urban_2020, by = c("State Name" = "State"))

co2daily_2024_state_avg <- co2daily_2024_state_avg %>%
  left_join(us_states, by = c("State Name" = "NAME")) %>%
  mutate(urban_rural = if_else(Urban > Rural, 1, 0))

# Select specific columns
co2daily_2024_state_avg <- co2daily_2024_state_avg %>%
  filter(!`State Name` %in% c("Alaska", "Hawaii", "Puerto Rico", "District Of Columbia")) %>%
  select(`State Name`, `Date Local`, `Arithmetic Mean`, densityMi, geometry, urban_rural)

co2daily_2024_state_avg <- co2daily_2024_state_avg %>%
  mutate(densityKm = densityMi / 2.58999) %>%
  select(-densityMi)  

co2daily_2024_state_avg <- co2daily_2024_state_avg %>%
  rename(
    Geometry = geometry,
    Urban = urban_rural,
    `Population Density` = densityKm,
    `Mean CO2` = `Arithmetic Mean`
  )

# Data cleaning for January 2000 - Filter, select columns, and drop NAs
co2daily_2000_state_avg <- co2daily_2000 %>%
  filter(str_starts(`Date Local`, "2000-01"), 
         `Sample Duration` == "8-HR RUN AVG END HOUR", 
         `Parameter Name` == "Carbon monoxide", 
         `Pollutant Standard` == "CO 8-hour 1971") %>%
  drop_na() %>%
  group_by(`State Name`, `Date Local`) %>% 
  summarize(
    `Arithmetic Mean` = mean(`Arithmetic Mean`, na.rm = TRUE),
    .groups = "drop"
  )

co2daily_2000_state_avg <- co2daily_2000_state_avg %>%
  left_join(us_states, by = c("State Name" = "NAME")) 

co2daily_2000_state_avg <- co2daily_2000_state_avg %>%
  filter(!`State Name` %in% c("Alaska", "Hawaii", "Puerto Rico", "District Of Columbia")) %>%
  select(`State Name`, `Date Local`, `Arithmetic Mean`, geometry)

co2daily_2000_state_avg <- co2daily_2000_state_avg %>%
  rename(
    Geometry = geometry,
    `Mean CO2` = `Arithmetic Mean`
  )
```

```{r}
# Prepare full US states geometry
us_states_full <- us_states %>% 
  filter(!NAME %in% c("Alaska", "Hawaii", "Puerto Rico", "District Of Columbia")) %>% 
  select(NAME, geometry)

# Join 2000 data with all states
co2daily_2000_state_avg_full <- us_states_full %>% 
  left_join(co2daily_2000_state_avg, by = c("NAME" = "State Name"))

# Reproject data to match OpenStreetMap CRS (EPSG:3857)
co2daily_2000_state_avg_full_3857 <- st_transform(co2daily_2000_state_avg_full, crs = 3857)

# Plot Map for 2000 with Basemap and Zoomed Extent
plot_2000 <- ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) +  # Add OpenStreetMap basemap
  geom_sf(data = co2daily_2000_state_avg_full_3857, aes(fill = `Mean CO2`), 
          color = "black", size = 0.1) +  # Plot CO2 concentrations
  scale_fill_gradient(name = "Mean CO2", 
                      low = "lightyellow", high = "darkred", na.value = "white") +
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) +
  theme_minimal() +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white")
  )

# Join 2024 data with all states
co2daily_2024_state_avg_full <- us_states_full %>%
  left_join(co2daily_2024_state_avg, by = c("NAME" = "State Name"))

# Reproject data to match OpenStreetMap CRS (EPSG:3857)
co2daily_2004_state_avg_full_3857 <- st_transform(co2daily_2024_state_avg_full, crs = 3857)

# Plot Map for 2024 with Basemap and Zoomed Extent
plot_2024 <- ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) +  # Add OpenStreetMap basemap
  geom_sf(data = co2daily_2004_state_avg_full_3857, aes(fill = `Mean CO2`),
          color = "black", size = 0.1) +  # Plot CO2 concentrations
  scale_fill_gradient(name = "Mean CO2", 
                      low = "lightyellow", high = "darkred", na.value = "white") + 
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) +  
  # Set zoomed extent for mainland U.S. in EPSG:3857 units
  theme_minimal() +
  theme(
    axis.title = element_blank(), 
    axis.text = element_blank(),  
    axis.ticks = element_blank(), 
    panel.grid = element_blank(), 
    panel.background = element_rect(fill = "white")  
  )

# Save the plot for 2000 as a PDF
ggsave("mean_co2_2000.pdf", plot = plot_2000, width = 8, height = 5)

# Save the plot for 2024 as a PDF
ggsave("mean_co2_2024.pdf", plot = plot_2024, width = 8, height = 5)
```

```{r}

kable(head(co2daily_2024_state_avg)) 
```

```{r}
kable(head(co2daily_2000_state_avg))
```

```{r}
# Summary for January 2000 dataset
summary_2000 <- co2daily_2000_state_avg %>%
  summarize(
    Mean = round(mean(`Mean CO2`, na.rm = TRUE), 4),
    SD = round(sd(`Mean CO2`, na.rm = TRUE), 4),
    Min = round(min(`Mean CO2`, na.rm = TRUE), 4),
    Max = round(max(`Mean CO2`, na.rm = TRUE), 4)
  )

# Add Statistic column for clarity
summary_2000 <- summary_2000 %>%
  mutate(Statistic = c("Mean CO2")) %>%
  select(Statistic, Mean, SD, Min, Max)

# Summary for January 2024 dataset
summary_2024 <- co2daily_2024_state_avg %>%
  reframe(
    Statistic = c("Mean", "SD", "Min", "Max"),
    `Mean CO2` = c(
      round(mean(`Mean CO2`, na.rm = TRUE), 4),
      round(sd(`Mean CO2`, na.rm = TRUE), 4),
      round(min(`Mean CO2`, na.rm = TRUE), 4),
      round(max(`Mean CO2`, na.rm = TRUE), 4)
    ),
    `Population Density` = c(
      round(mean(`Population Density`, na.rm = TRUE), 4),
      round(sd(`Population Density`, na.rm = TRUE), 4),
      round(min(`Population Density`, na.rm = TRUE), 4),
      round(max(`Population Density`, na.rm = TRUE), 4)
    )
  ) %>%
  as.data.frame(check.names = FALSE)

# Display results in tables
knitr::kable(summary_2000, caption = "Summary Statistics for January 2000")
knitr::kable(summary_2024, caption = "Summary Statistics for January 2024")
```

```{r, echo=FALSE, warning=FALSE}
# Average CO2 per state for 2000
co2_2000_avg <- co2daily_2000_state_avg %>%
  group_by(`State Name`) %>%
  summarize(mean_co2_2000 = mean(`Mean CO2`, na.rm = TRUE), .groups = "drop")

# Average CO2 per state for 2024
co2_2024_avg <- co2daily_2024_state_avg %>%
  group_by(`State Name`) %>%
  summarize(mean_co2_2024 = mean(`Mean CO2`, na.rm = TRUE), .groups = "drop")

co2_state_avg <- co2_2000_avg %>%
  left_join(co2_2024_avg, by = "State Name")

# Add a column for state abbreviations (if not already available)
co2_state_avg <- co2_state_avg %>%
  mutate(state_abbr = state.abb[match(`State Name`, state.name)])

# Scatter Plot with State Labels
scatterplot <- ggplot(co2_state_avg, aes(x = mean_co2_2000, y = mean_co2_2024)) +
  geom_point(color = "blue", size = 1.5, alpha = 0.7) +
  geom_text(aes(label = state_abbr), hjust = -0.3, vjust = 0.5, size = 2.5) +  # Move labels to the right
  labs(title = "Scatter Plot: Mean CO2 (2000 vs 2024)",
       x = "Mean CO2 (2000)",
       y = "Mean CO2 (2024)") +
  theme_minimal()

ggsave("scatterplot.pdf", plot = scatterplot, width = 8, height = 5)
```

# Spatial Data Exploration
Global Moran's I
Quantify spatial autocorrelation for both years.
```{r, echo=FALSE, warning=FALSE}
# Convert 2000 data to sf object (Geometry already exists)
co2daily_2000_state_avg_sf <- st_as_sf(co2daily_2000_state_avg)

# Spatial Weights for 2000
coords_2000 <- st_centroid(co2daily_2000_state_avg_sf$Geometry)
nb_2000 <- poly2nb(st_as_sf(co2daily_2000_state_avg_sf), queen = TRUE)
weights_2000 <- nb2listw(nb_2000, style = "W")

# Moran's I for 2000
moran_2000 <- moran.test(co2daily_2000_state_avg_sf$`Mean CO2`, weights_2000)
moran_2000

# Convert 2000 data to sf object (Geometry already exists)
co2daily_2024_state_avg_sf <- st_as_sf(co2daily_2024_state_avg)

# Spatial Weights for 2024
coords_2024 <- st_centroid(co2daily_2024_state_avg_sf$Geometry)
nb_2024 <- poly2nb(st_as_sf(co2daily_2024_state_avg_sf), queen = TRUE)
weights_2024 <- nb2listw(nb_2024, style = "W")

# Moran's I for 2024
moran_2024 <- moran.test(co2daily_2024_state_avg_sf$`Mean CO2`, weights_2024)
moran_2024
```

Local Moran's I
Identify hotspots and cold spots for both years.
```{r, echo=FALSE, warning=FALSE}

# Local Moran's I for 2000
local_moran_2000 <- localmoran(co2daily_2000_state_avg_sf$`Mean CO2`, weights_2000)

# Add Local Moran's I results to the dataset
co2daily_2000_state_avg_sf$Ii <- local_moran_2000[, 1]       # Local Moran's I statistic
co2daily_2000_state_avg_sf$Z.Ii <- local_moran_2000[, 4]     # Z-scores
co2daily_2000_state_avg_sf$p.value <- local_moran_2000[, 5]  # p-values

# Classification of quadrants
co2daily_2000_state_avg_sf$quadrant <- with(co2daily_2000_state_avg_sf, 
    ifelse(Z.Ii > 0 & `Mean CO2` > mean(`Mean CO2`), "High-High",
    ifelse(Z.Ii < 0 & `Mean CO2` > mean(`Mean CO2`), "Low-High",
    ifelse(Z.Ii > 0 & `Mean CO2` < mean(`Mean CO2`), "High-Low",
    "Low-Low"))))

# Create a significance column
co2daily_2000_state_avg_sf$significant <- co2daily_2000_state_avg_sf$p.value <= 0.05

# Reproject Data for Compatibility
co2daily_2000_state_avg_sf_3857 <- st_transform(co2daily_2000_state_avg_sf, crs = 3857)
us_states_full_3857 <- st_transform(us_states_full, crs = 3857)

# Add OpenStreetMap Basemap with Correct Layer Order
ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) + # Add basemap
  geom_sf(data = us_states_full_3857, fill = "white", color = "black", size = 0.1) + # Empty states first
  geom_sf(data = co2daily_2000_state_avg_sf_3857, 
          aes(fill = quadrant), 
          color = "black", size = 0.1) + # Hotspot map on top
  scale_fill_manual(values = c("High-High" = "red",
                               "Low-Low" = "blue",
                               "High-Low" = "pink",
                               "Low-High" = "lavender"),  # Use 'skyblue' for clarity
                    na.value = "white", 
                    name = "Local Moran's I") +
  labs(title = "Hotspot Analysis for Mean CO2 (2000)",
       subtitle = "Local Moran's I Analysis") +
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) + # Zoom to continental U.S.
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.background = element_rect(fill = "white")
  )
```

```{r, echo=FALSE, warning=FALSE}
# Local Moran's I for 2024
local_moran_2024 <- localmoran(co2daily_2024_state_avg_sf$`Mean CO2`, weights_2024)

# Add Local Moran's I results to the dataset
co2daily_2024_state_avg_sf$Ii <- local_moran_2024[, 1]       # Local Moran's I statistic
co2daily_2024_state_avg_sf$Z.Ii <- local_moran_2024[, 4]     # Z-scores
co2daily_2024_state_avg_sf$p.value <- local_moran_2024[, 5]  # p-values

# Classification of quadrants
co2daily_2024_state_avg_sf$quadrant <- with(co2daily_2024_state_avg_sf, 
    ifelse(Z.Ii > 0 & `Mean CO2` > mean(`Mean CO2`), "High-High",
    ifelse(Z.Ii < 0 & `Mean CO2` > mean(`Mean CO2`), "Low-High",
    ifelse(Z.Ii > 0 & `Mean CO2` < mean(`Mean CO2`), "High-Low",
    "Low-Low"))))

# Create a significance column
co2daily_2024_state_avg_sf$significant <- co2daily_2024_state_avg_sf$p.value <= 0.05

# Reproject Data for Compatibility
co2daily_2024_state_avg_sf_3857 <- st_transform(co2daily_2024_state_avg_sf, crs = 3857)
us_states_full_3857 <- st_transform(us_states_full, crs = 3857)

# Add OpenStreetMap Basemap with Correct Layer Order
ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) + # Add basemap
  geom_sf(data = us_states_full_3857, fill = "white", color = "black", size = 0.1) + # Empty states first
  geom_sf(data = co2daily_2024_state_avg_sf_3857, 
          aes(fill = quadrant), 
          color = "black", size = 0.1) + # Hotspot map on top
  scale_fill_manual(values = c("High-High" = "red",
                               "Low-Low" = "blue",
                               "High-Low" = "pink",
                               "Low-High" = "lavender"),  # Use 'lavender' for subtle contrast
                    na.value = "white", 
                    name = "Local Moran's I") +
  labs(title = "Hotspot Analysis for Mean CO2 (2024)",
       subtitle = "Local Moran's I Analysis") +
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) + # Zoom to continental U.S.
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.background = element_rect(fill = "white")
  )
```
Rook Contiguity
```{r}
# Spatial weights with rook contiguity for 2000
nb_rook_2000 <- poly2nb(st_as_sf(co2daily_2000_state_avg_sf), queen = FALSE)
weights_rook_2000 <- nb2listw(nb_rook_2000, style = "W")
moran_rook_2000 <- moran.test(co2daily_2000_state_avg_sf$`Mean CO2`, weights_rook_2000)
moran_rook_2000

# Repeat for 2024
nb_rook_2024 <- poly2nb(st_as_sf(co2daily_2024_state_avg_sf), queen = FALSE)
weights_rook_2024 <- nb2listw(nb_rook_2024, style = "W")
moran_rook_2024 <- moran.test(co2daily_2024_state_avg_sf$`Mean CO2`, weights_rook_2024)
moran_rook_2024
```



```{r}
plot(st_geometry(co2daily_2024_state_avg_sf), border = "lightgray", main = "Queen Contiguity Neighbors")
plot(nb_2024, st_coordinates(st_centroid(st_geometry(co2daily_2024_state_avg_sf))), 
     add = TRUE, col = "darkred", lwd = 1)
```
```{r}
plot(st_geometry(co2daily_2024_state_avg_sf), border = "lightgray", main = "Rook Contiguity Neighbors")
plot(nb_rook_2024, st_coordinates(st_centroid(st_geometry(co2daily_2024_state_avg_sf))), 
     add = TRUE, col = "darkred", lwd = 1)
```




# Spatial Modelling
```{r, echo=FALSE, warning=FALSE}
# OLS Regression
ols_model <- lm(`Mean CO2` ~ `Population Density` + Urban, data = co2daily_2024_state_avg_sf)
summary(ols_model)

# Add residuals
co2daily_2024_state_avg_sf$residuals <- resid(ols_model)

# Moran's I for residuals
moran_resid <- moran.test(co2daily_2024_state_avg_sf$residuals, weights_2024)
moran_resid
# SAR Lag-Error Model
sar_error_lag_model <- sacsarlm(`Mean CO2` ~ `Population Density` + Urban, data = co2daily_2024_state_avg_sf, listw = weights_2024)
summary(sar_error_lag_model)

# Add residuals from SAR Lag-Error Model
co2daily_2024_state_avg_sf$sar_error_lag_resid <- residuals(sar_error_lag_model)

# Moran's I for SAR Lag-Error Model Residuals
moran_sar_error_lag_resid <- moran.test(co2daily_2024_state_avg_sf$sar_error_lag_resid, weights_2024)
moran_sar_error_lag_resid
# CAR Model
car_model <- spautolm(`Mean CO2` ~ `Population Density` + Urban, data = co2daily_2024_state_avg_sf, listw = weights_2024, family = "CAR")
summary(car_model)

# Add residuals from CAR Model
co2daily_2024_state_avg_sf$car_resid <- residuals(car_model)

# Moran's I for CAR Model Residuals
moran_car_resid <- moran.test(co2daily_2024_state_avg_sf$car_resid, weights_2024)
moran_car_resid

# Model Comparison Table
results <- data.frame(
  Model = c("OLS", "SAR (Lag-Error)", "CAR"),
  AIC = round(c(AIC(ols_model), AIC(sar_error_lag_model), AIC(car_model)), 4),
  check.names = FALSE
)

kable(results)
```

```{r}
# Add residuals if missing
co2daily_2024_state_avg_sf_3857$residuals_ols <- resid(ols_model)  # OLS Residuals
co2daily_2024_state_avg_sf_3857$residuals_sar <- residuals(sar_error_lag_model)  # SAR Lag-Error Residuals
co2daily_2024_state_avg_sf_3857$residuals_car <- residuals(car_model)  # CAR Residuals

# Plot OLS Residuals with Basemap (No Axes)
ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) +
  geom_sf(data = us_states_full_3857, fill = "white", color = "black", size = 0.1) +
  geom_sf(data = co2daily_2024_state_avg_sf_3857, aes(fill = residuals_ols), color = "black", size = 0.1) +
  scale_fill_viridis_c(option = "magma", name = "OLS Residuals", na.value = "white") +
  labs(title = "Residuals from OLS Model") +
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) +
  theme_minimal() +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white")
  )

# Plot SAR Lag-Error Residuals with Basemap (No Axes)
ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) +
  geom_sf(data = us_states_full_3857, fill = "white", color = "black", size = 0.1) +
  geom_sf(data = co2daily_2024_state_avg_sf_3857, aes(fill = residuals_sar), color = "black", size = 0.1) +
  scale_fill_viridis_c(option = "magma", name = "SAR Lag-Error Residuals", na.value = "white") +
  labs(title = "Residuals from SAR Lag-Error Model") +
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) +
  theme_minimal() +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white")
  )

# Plot CAR Residuals with Basemap (No Axes)
ggplot() +
  annotation_map_tile(type = "osm", zoomin = 0) +
  geom_sf(data = us_states_full_3857, fill = "white", color = "black", size = 0.1) +
  geom_sf(data = co2daily_2024_state_avg_sf_3857, aes(fill = residuals_car), color = "black", size = 0.1) +
  scale_fill_viridis_c(option = "magma", name = "CAR Residuals", na.value = "white") +
  labs(title = "Residuals from CAR Model") +
  coord_sf(xlim = c(-14500000, -7000000), ylim = c(2300000, 7000000), expand = FALSE) +
  theme_minimal() +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white")
  )
```



